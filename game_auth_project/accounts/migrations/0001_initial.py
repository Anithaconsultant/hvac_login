# Generated by Django 5.2 on 2025-05-06 08:05

import accounts.utils
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=accounts.utils.generate_short_id, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('game_version', models.CharField(blank=True, max_length=20, null=True)),
                ('nickname', models.CharField(blank=True, max_length=30, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True)),
                ('date_registered', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGameProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('attempt_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('completion_status', models.CharField(choices=[('not_started', 'Not Started'), ('aborted', 'Aborted'), ('time_out', 'Time Out'), ('within_time', 'Within Time')], max_length=20)),
                ('points_scored', models.PositiveIntegerField(blank=True, null=True)),
                ('time_taken', models.CharField(blank=True, max_length=20, null=True)),
                ('task_number', models.CharField(blank=True, max_length=20, null=True)),
                ('max_points', models.PositiveIntegerField(blank=True, null=True)),
                ('hint_penalty_points', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('bonus_points', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('tools_earned', models.JSONField(default=list)),
                ('badges', models.JSONField(default=list)),
                ('super_powers', models.JSONField(default=list)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Game Progress',
                'unique_together': {('user', 'level', 'attempt_number', 'task_number')},
            },
        ),
    ]
